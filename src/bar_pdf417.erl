-module(bar_pdf417).
-behaviour(barcode).
-compile(export_all). % For debug

% The generator of PDF417 bar code symbologies
% Mode switching is supported
% Automatic choosing of the ECC Level (0 - 5)
% ECC Levels 6 - 8 are not supported
% Doesn't support Macro
% Doesn't support ECI (Extended Channel Interpretation)
% Doesn't support generation of the Compact form


-export([
         encode/1
        ]).

-define(SCHEMA,
        {
         {31111136, 51111125, 21111155}, %    0
         {41111144, 61111133, 31111163}, %    1
         {51111152, 41111216, 11111246}, %    2
         {31111235, 51111224, 21111254}, %    3
         {41111243, 61111232, 31111262}, %    4
         {51111251, 41111315, 11111345}, %    5
         {21111326, 51111323, 21111353}, %    6
         {31111334, 61111331, 31111361}, %    7
         {21111425, 41111414, 11111444}, %    8
         {11111516, 51111422, 21111452}, %    9
         {21111524, 41111513, 11111543}, %   10
         {11111615, 51111521, 61112114}, %   11
         {21112136, 41111612, 11112155}, %   12
         {31112144, 41112125, 21112163}, %   13
         {41112152, 51112133, 61112213}, %   14
         {21112235, 61112141, 11112254}, %   15
         {31112243, 31112216, 21112262}, %   16
         {41112251, 41112224, 61112312}, %   17
         {11112326, 51112232, 11112353}, %   18
         {21112334, 31112315, 21112361}, %   19
         {11112425, 41112323, 61112411}, %   20
         {11113136, 51112331, 11112452}, %   21
         {21113144, 31112414, 51113114}, %   22
         {31113152, 41112422, 61113122}, %   23
         {11113235, 31112513, 11113163}, %   24
         {21113243, 41112521, 51113213}, %   25
         {31113251, 31112612, 61113221}, %   26
         {11113334, 31113125, 11113262}, %   27
         {21113342, 41113133, 51113312}, %   28
         {11114144, 51113141, 11113361}, %   29
         {21114152, 21113216, 51113411}, %   30
         {11114243, 31113224, 41114114}, %   31
         {21114251, 41113232, 51114122}, %   32
         {11115152, 21113315, 41114213}, %   33
         {51116111, 31113323, 51114221}, %   34
         {31121135, 41113331, 41114312}, %   35
         {41121143, 21113414, 41114411}, %   36
         {51121151, 31113422, 31115114}, %   37
         {21121226, 21113513, 41115122}, %   38
         {31121234, 31113521, 31115213}, %   39
         {41121242, 21113612, 41115221}, %   40
         {21121325, 21114125, 31115312}, %   41
         {31121333, 31114133, 31115411}, %   42
         {11121416, 41114141, 21116114}, %   43
         {21121424, 11114216, 31116122}, %   44
         {31121432, 21114224, 21116213}, %   45
         {11121515, 31114232, 31116221}, %   46
         {21121523, 11114315, 21116312}, %   47
         {11121614, 21114323, 11121146}, %   48
         {21122135, 31114331, 21121154}, %   49
         {31122143, 11114414, 31121162}, %   50
         {41122151, 21114422, 11121245}, %   51

         {11122226, 11114513, 21121253}, %   52
         {21122234, 21114521, 31121261}, %   53
         {31122242, 11115125, 11121344}, %   54
         {11122325, 21115133, 21121352}, %   55
         {21122333, 31115141, 11121443}, %   56
         {31122341, 11115224, 21121451}, %   57
         {11122424, 21115232, 11121542}, %   58
         {21122432, 11115323, 61122113}, %   59
         {11123135, 21115331, 11122154}, %   60
         {21123143, 11115422, 21122162}, %   61
         {31123151, 11116133, 61122212}, %   62
         {11123234, 21116141, 11122253}, %   63
         {21123242, 11116232, 21122261}, %   64
         {11123333, 11116331, 61122311}, %   65
         {21123341, 41121116, 11122352}, %   66
         {11124143, 51121124, 11122451}, %   67
         {21124151, 61121132, 51123113}, %   68
         {11124242, 41121215, 61123121}, %   69
         {11124341, 51121223, 11123162}, %   70
         {21131126, 61121231, 51123212}, %   71
         {31131134, 41121314, 11123261}, %   72
         {41131142, 51121322, 51123311}, %   73
         {21131225, 41121413, 41124113}, %   74
         {31131233, 51121421, 51124121}, %   75
         {41131241, 41121512, 41124212}, %   76
         {11131316, 41121611, 41124311}, %   77
         {21131324, 31122116, 31125113}, %   78
         {31131332, 41122124, 41125121}, %   79
         {11131415, 51122132, 31125212}, %   80
         {21131423, 31122215, 31125311}, %   81
         {11131514, 41122223, 21126113}, %   82
         {11131613, 51122231, 31126121}, %   83
         {11132126, 31122314, 21126212}, %   84
         {21132134, 41122322, 21126311}, %   85
         {31132142, 31122413, 11131145}, %   86
         {11132225, 41122421, 21131153}, %   87
         {21132233, 31122512, 31131161}, %   88
         {31132241, 31122611, 11131244}, %   89
         {11132324, 21123116, 21131252}, %   90
         {21132332, 31123124, 11131343}, %   91
         {11132423, 41123132, 21131351}, %   92
         {11132522, 21123215, 11131442}, %   93
         {11133134, 31123223, 11131541}, %   94
         {21133142, 41123231, 61132112}, %   95
         {11133233, 21123314, 11132153}, %   96
         {21133241, 31123322, 21132161}, %   97
         {11133332, 21123413, 61132211}, %   98
         {11134142, 31123421, 11132252}, %   99
         {21141125, 21123512, 11132351}, %  100
         {31141133, 21123611, 51133112}, %  101
         {41141141, 11124116, 11133161}, %  102
         {11141216, 21124124, 51133211}, %  103
         {21141224, 31124132, 41134112}, %  104
         {31141232, 11124215, 41134211}, %  105
         {11141315, 21124223, 31135112}, %  106
         {21141323, 31124231, 31135211}, %  107
         {31141331, 11124314, 21136112}, %  108
         {11141414, 21124322, 21136211}, %  109
         {21141422, 11124413, 11141144}, %  110
         {11141513, 21124421, 21141152}, %  111
         {21141521, 11124512, 11141243}, %  112
         {11142125, 11125124, 21141251}, %  113
         {21142133, 21125132, 11141342}, %  114
         {31142141, 11125223, 11141441}, %  115
         {11142224, 21125231, 61142111}, %  116
         {21142232, 11125322, 11142152}, %  117

         {11142323, 11125421, 11142251}, %  118
         {21142331, 11126132, 51143111}, %  119
         {11142422, 11126231, 41144111}, %  120
         {11142521, 41131115, 31145111}, %  121
         {21143141, 51131123, 11151143}, %  122
         {11143331, 61131131, 21151151}, %  123
         {11151116, 41131214, 11151242}, %  124
         {21151124, 51131222, 11151341}, %  125
         {31151132, 41131313, 11152151}, %  126
         {11151215, 51131321, 11161142}, %  127
         {21151223, 41131412, 11161241}, %  128
         {31151231, 41131511, 12111146}, %  129
         {11151314, 31132115, 22111154}, %  130
         {21151322, 41132123, 32111162}, %  131
         {11151413, 51132131, 12111245}, %  132
         {21151421, 31132214, 22111253}, %  133
         {11151512, 41132222, 32111261}, %  134
         {11152124, 31132313, 12111344}, %  135
         {11152223, 41132321, 22111352}, %  136
         {11152322, 31132412, 12111443}, %  137
         {11161115, 31132511, 22111451}, %  138
         {31161131, 21133115, 12111542}, %  139
         {21161222, 31133123, 62112113}, %  140
         {21161321, 41133131, 12112154}, %  141
         {11161511, 21133214, 22112162}, %  142
         {32111135, 31133222, 62112212}, %  143
         {42111143, 21133313, 12112253}, %  144
         {52111151, 31133321, 22112261}, %  145
         {22111226, 21133412, 62112311}, %  146
         {32111234, 21133511, 12112352}, %  147
         {42111242, 11134115, 12112451}, %  148
         {22111325, 21134123, 52113113}, %  149
         {32111333, 31134131, 62113121}, %  150
         {42111341, 11134214, 12113162}, %  151
         {12111416, 21134222, 52113212}, %  152
         {22111424, 11134313, 12113261}, %  153
         {12111515, 21134321, 52113311}, %  154
         {22112135, 11134412, 42114113}, %  155
         {32112143, 11134511, 52114121}, %  156
         {42112151, 11135123, 42114212}, %  157
         {12112226, 21135131, 42114311}, %  158
         {22112234, 11135222, 32115113}, %  159
         {32112242, 11135321, 42115121}, %  160
         {12112325, 11136131, 32115212}, %  161
         {22112333, 41141114, 32115311}, %  162
         {12112424, 51141122, 22116113}, %  163
         {12112523, 41141213, 32116121}, %  164
         {12113135, 51141221, 22116212}, %  165
         {22113143, 41141312, 22116311}, %  166
         {32113151, 41141411, 21211145}, %  167
         {12113234, 31142114, 31211153}, %  168
         {22113242, 41142122, 41211161}, %  169
         {12113333, 31142213, 11211236}, %  170
         {12113432, 41142221, 21211244}, %  171
         {12114143, 31142312, 31211252}, %  172
         {22114151, 31142411, 11211335}, %  173
         {12114242, 21143114, 21211343}, %  174
         {12115151, 31143122, 31211351}, %  175
         {31211126, 21143213, 11211434}, %  176
         {41211134, 31143221, 21211442}, %  177
         {51211142, 21143312, 11211533}, %  178
         {31211225, 21143411, 21211541}, %  179
         {41211233, 11144114, 11211632}, %  180
         {51211241, 21144122, 12121145}, %  181
         {21211316, 11144213, 22121153}, %  182
         {31211324, 21144221, 32121161}, %  183

         {41211332, 11144312, 11212145}, %  184
         {21211415, 11144411, 12121244}, %  185
         {31211423, 11145122, 22121252}, %  186
         {41211431, 11145221, 11212244}, %  187
         {21211514, 41151113, 21212252}, %  188
         {31211522, 51151121, 22121351}, %  189
         {22121126, 41151212, 11212343}, %  190
         {32121134, 41151311, 12121442}, %  191
         {42121142, 31152113, 11212442}, %  192
         {21212126, 41152121, 12121541}, %  193
         {22121225, 31152212, 11212541}, %  194
         {32121233, 31152311, 62122112}, %  195
         {42121241, 21153113, 12122153}, %  196
         {21212225, 31153121, 22122161}, %  197
         {31212233, 21153212, 61213112}, %  198
         {41212241, 21153311, 62122211}, %  199
         {11212316, 11154113, 11213153}, %  200
         {12121415, 21154121, 12122252}, %  201
         {22121423, 11154212, 61213211}, %  202
         {32121431, 11154311, 11213252}, %  203
         {11212415, 41161112, 12122351}, %  204
         {21212423, 41161211, 11213351}, %  205
         {11212514, 31162112, 52123112}, %  206
         {12122126, 31162211, 12123161}, %  207
         {22122134, 21163112, 51214112}, %  208
         {32122142, 21163211, 52123211}, %  209
         {11213126, 42111116, 11214161}, %  210
         {12122225, 52111124, 51214211}, %  211
         {22122233, 62111132, 42124112}, %  212
         {32122241, 42111215, 41215112}, %  213
         {11213225, 52111223, 42124211}, %  214
         {21213233, 62111231, 41215211}, %  215
         {31213241, 42111314, 32125112}, %  216
         {11213324, 52111322, 31216112}, %  217
         {12122423, 42111413, 32125211}, %  218
         {11213423, 52111421, 31216211}, %  219
         {12123134, 42111512, 22126112}, %  220
         {22123142, 42111611, 22126211}, %  221
         {11214134, 32112116, 11221136}, %  222
         {12123233, 42112124, 21221144}, %  223
         {22123241, 52112132, 31221152}, %  224
         {11214233, 32112215, 11221235}, %  225
         {21214241, 42112223, 21221243}, %  226
         {11214332, 52112231, 31221251}, %  227
         {12124142, 32112314, 11221334}, %  228
         {11215142, 42112322, 21221342}, %  229
         {12124241, 32112413, 11221433}, %  230
         {11215241, 42112421, 21221441}, %  231
         {31221125, 32112512, 11221532}, %  232
         {41221133, 32112611, 11221631}, %  233
         {51221141, 22113116, 12131144}, %  234
         {21221216, 32113124, 22131152}, %  235
         {31221224, 42113132, 11222144}, %  236
         {41221232, 22113215, 12131243}, %  237
         {21221315, 32113223, 22131251}, %  238
         {31221323, 42113231, 11222243}, %  239
         {41221331, 22113314, 21222251}, %  240
         {21221414, 32113322, 11222342}, %  241
         {31221422, 22113413, 12131441}, %  242
         {21221513, 32113421, 11222441}, %  243
         {21221612, 22113512, 62132111}, %  244
         {22131125, 22113611, 12132152}, %  245
         {32131133, 12114116, 61223111}, %  246
         {42131141, 22114124, 11223152}, %  247
         {21222125, 32114132, 12132251}, %  248
         {22131224, 12114215, 11223251}, %  249

         {32131232, 22114223, 52133111}, %  250
         {11222216, 32114231, 51224111}, %  251
         {12131315, 12114314, 42134111}, %  252
         {31222232, 22114322, 41225111}, %  253
         {32131331, 12114413, 32135111}, %  254
         {11222315, 22114421, 31226111}, %  255
         {12131414, 12114512, 22136111}, %  256
         {22131422, 12115124, 11231135}, %  257
         {11222414, 22115132, 21231143}, %  258
         {21222422, 12115223, 31231151}, %  259
         {22131521, 22115231, 11231234}, %  260
         {12131612, 12115322, 21231242}, %  261
         {12132125, 12115421, 11231333}, %  262
         {22132133, 12116132, 21231341}, %  263
         {32132141, 12116231, 11231432}, %  264
         {11223125, 51211115, 11231531}, %  265
         {12132224, 61211123, 12141143}, %  266
         {22132232, 11211164, 22141151}, %  267
         {11223224, 51211214, 11232143}, %  268
         {21223232, 61211222, 12141242}, %  269
         {22132331, 11211263, 11232242}, %  270
         {11223323, 51211313, 12141341}, %  271
         {12132422, 61211321, 11232341}, %  272
         {12132521, 11211362, 12142151}, %  273
         {12133133, 51211412, 11233151}, %  274
         {22133141, 51211511, 11241134}, %  275
         {11224133, 42121115, 21241142}, %  276
         {12133232, 52121123, 11241233}, %  277
         {11224232, 62121131, 21241241}, %  278
         {12133331, 41212115, 11241332}, %  279
         {11224331, 42121214, 11241431}, %  280
         {11225141, 61212131, 12151142}, %  281
         {21231116, 41212214, 11242142}, %  282
         {31231124, 51212222, 12151241}, %  283
         {41231132, 52121321, 11242241}, %  284
         {21231215, 41212313, 11251133}, %  285
         {31231223, 42121412, 21251141}, %  286
         {41231231, 41212412, 11251232}, %  287
         {21231314, 42121511, 11251331}, %  288
         {31231322, 41212511, 12161141}, %  289
         {21231413, 32122115, 11252141}, %  290
         {31231421, 42122123, 11261132}, %  291
         {21231512, 52122131, 11261231}, %  292
         {21231611, 31213115, 13111145}, %  293
         {12141116, 32122214, 23111153}, %  294
         {22141124, 42122222, 33111161}, %  295
         {32141132, 31213214, 13111244}, %  296
         {11232116, 41213222, 23111252}, %  297
         {12141215, 42122321, 13111343}, %  298
         {22141223, 31213313, 23111351}, %  299
         {32141231, 32122412, 13111442}, %  300
         {11232215, 31213412, 13111541}, %  301
         {21232223, 32122511, 63112112}, %  302
         {31232231, 31213511, 13112153}, %  303
         {11232314, 22123115, 23112161}, %  304
         {12141413, 32123123, 63112211}, %  305
         {22141421, 42123131, 13112252}, %  306
         {11232413, 21214115, 13112351}, %  307
         {21232421, 22123214, 53113112}, %  308
         {11232512, 32123222, 13113161}, %  309
         {12142124, 21214214, 53113211}, %  310
         {22142132, 31214222, 43114112}, %  311
         {11233124, 32123321, 43114211}, %  312
         {12142223, 21214313, 33115112}, %  313
         {22142231, 22123412, 33115211}, %  314
         {11233223, 21214412, 23116112}, %  315

         {21233231, 22123511, 23116211}, %  316
         {11233322, 21214511, 12211136}, %  317
         {12142421, 12124115, 22211144}, %  318
         {11233421, 22124123, 32211152}, %  319
         {11234132, 32124131, 12211235}, %  320
         {11234231, 11215115, 22211243}, %  321
         {21241115, 12124214, 32211251}, %  322
         {31241123, 22124222, 12211334}, %  323
         {41241131, 11215214, 22211342}, %  324
         {21241214, 21215222, 12211433}, %  325
         {31241222, 22124321, 22211441}, %  326
         {21241313, 11215313, 12211532}, %  327
         {31241321, 12124412, 12211631}, %  328
         {21241412, 11215412, 13121144}, %  329
         {21241511, 12124511, 23121152}, %  330
         {12151115, 12125123, 12212144}, %  331
         {22151123, 22125131, 13121243}, %  332
         {32151131, 11216123, 23121251}, %  333
         {11242115, 12125222, 12212243}, %  334
         {12151214, 11216222, 22212251}, %  335
         {22151222, 12125321, 12212342}, %  336
         {11242214, 11216321, 13121441}, %  337
         {21242222, 12126131, 12212441}, %  338
         {22151321, 51221114, 63122111}, %  339
         {11242313, 61221122, 13122152}, %  340
         {12151412, 11221163, 62213111}, %  341
         {11242412, 51221213, 12213152}, %  342
         {12151511, 61221221, 13122251}, %  343
         {12152123, 11221262, 12213251}, %  344
         {11243123, 51221312, 53123111}, %  345
         {11243222, 11221361, 52214111}, %  346
         {11243321, 51221411, 43124111}, %  347
         {31251122, 42131114, 42215111}, %  348
         {31251221, 52131122, 33125111}, %  349
         {21251411, 41222114, 32216111}, %  350
         {22161122, 42131213, 23126111}, %  351
         {12161213, 52131221, 21311135}, %  352
         {11252213, 41222213, 31311143}, %  353
         {11252312, 51222221, 41311151}, %  354
         {11252411, 41222312, 11311226}, %  355
         {23111126, 42131411, 21311234}, %  356
         {33111134, 41222411, 31311242}, %  357
         {43111142, 32132114, 11311325}, %  358
         {23111225, 42132122, 21311333}, %  359
         {33111233, 31223114, 31311341}, %  360
         {13111316, 32132213, 11311424}, %  361
         {23111324, 42132221, 21311432}, %  362
         {33111332, 31223213, 11311523}, %  363
         {13111415, 41223221, 21311531}, %  364
         {23111423, 31223312, 11311622}, %  365
         {13111514, 32132411, 12221135}, %  366
         {13111613, 31223411, 22221143}, %  367
         {13112126, 22133114, 32221151}, %  368
         {23112134, 32133122, 11312135}, %  369
         {33112142, 21224114, 12221234}, %  370
         {13112225, 22133213, 22221242}, %  371
         {23112233, 32133221, 11312234}, %  372
         {33112241, 21224213, 21312242}, %  373
         {13112324, 31224221, 22221341}, %  374
         {23112332, 21224312, 11312333}, %  375
         {13112423, 22133411, 12221432}, %  376
         {13112522, 21224411, 11312432}, %  377
         {13113134, 12134114, 12221531}, %  378
         {23113142, 22134122, 11312531}, %  379
         {13113233, 11225114, 13131143}, %  380
         {23113241, 12134213, 23131151}, %  381

         {13113332, 22134221, 12222143}, %  383
         {13114142, 11225213, 13131242}, %  382
         {13114241, 21225221, 11313143}, %  384
         {32211125, 11225312, 12222242}, %  385
         {42211133, 12134411, 13131341}, %  386
         {52211141, 11225411, 11313242}, %  387
         {22211216, 12135122, 12222341}, %  388
         {32211224, 11226122, 11313341}, %  389
         {42211232, 12135221, 13132151}, %  390
         {22211315, 11226221, 12223151}, %  391
         {32211323, 51231113, 11314151}, %  392
         {42211331, 61231121, 11321126}, %  393
         {22211414, 11231162, 21321134}, %  394
         {32211422, 51231212, 31321142}, %  395
         {22211513, 11231261, 11321225}, %  396
         {32211521, 51231311, 21321233}, %  397
         {23121125, 42141113, 31321241}, %  398
         {33121133, 52141121, 11321324}, %  399
         {43121141, 41232113, 21321332}, %  400
         {22212125, 51232121, 11321423}, %  401
         {23121224, 41232212, 21321431}, %  402
         {33121232, 42141311, 11321522}, %  403
         {12212216, 41232311, 11321621}, %  404
         {13121315, 32142113, 12231134}, %  405
         {32212232, 42142121, 22231142}, %  406
         {33121331, 31233113, 11322134}, %  407
         {12212315, 32142212, 12231233}, %  408
         {22212323, 31233212, 22231241}, %  409
         {23121422, 32142311, 11322233}, %  410
         {12212414, 31233311, 21322241}, %  411
         {13121513, 22143113, 11322332}, %  412
         {12212513, 32143121, 12231431}, %  414
         {13122125, 21234113, 11322431}, %  414
         {23122133, 31234121, 13141142}, %  415
         {33122141, 21234212, 12232142}, %  416
         {12213125, 22143311, 13141241}, %  417
         {13122224, 21234311, 11323142}, %  418
         {32213141, 12144113, 12232241}, %  419
         {12213224, 22144121, 11323241}, %  420
         {22213232, 11235113, 11331125}, %  421
         {23122331, 12144212, 21331133}, %  422
         {12213323, 11235212, 31331141}, %  423
         {13122422, 12144311, 11331224}, %  424
         {12213422, 11235311, 21331232}, %  425
         {13123133, 12145121, 11331323}, %  426
         {23123141, 11236121, 21331331}, %  427
         {12214133, 51241112, 11331422}, %  428
         {13123232, 11241161, 11331521}, %  429
         {12214232, 51241211, 12241133}, %  430
         {13123331, 42151112, 22241141}, %  431
         {13124141, 41242112, 11332133}, %  432
         {12215141, 42151211, 12241232}, %  433
         {31311116, 41242211, 11332232}, %  434
         {41311124, 32152112, 12241331}, %  435
         {51311132, 31243112, 11332331}, %  436
         {31311215, 32152211, 13151141}, %  437
         {41311223, 31243211, 12242141}, %  438
         {51311231, 22153112, 11333141}, %  439
         {31311314, 21244112, 11341124}, %  440
         {41311322, 22153211, 21341132}, %  441
         {31311413, 21244211, 11341223}, %  442
         {41311421, 12154112, 21341231}, %  443
         {31311512, 11245112, 11341322}, %  444
         {22221116, 12154211, 11341421}, %  445
         {32221124, 11245211, 12251132}, %  446
         {42221132, 51251111, 11342132}, %  447

         {21312116, 42161111, 12251231}, %  448
         {22221215, 41252111, 11342231}, %  449
         {41312132, 32162111, 11351123}, %  450
         {42221231, 31253111, 21351131}, %  451
         {21312215, 22163111, 11351222}, %  452
         {31312223, 21254111, 11351321}, %  453
         {41312231, 43111115, 12261131}, %  454
         {21312314, 53111123, 11352131}, %  455
         {22221413, 63111131, 11361122}, %  456
         {32221421, 43111214, 11361221}, %  457
         {21312413, 53111222, 14111144}, %  458
         {31312421, 43111313, 24111152}, %  459
         {22221611, 53111321, 14111243}, %  460
         {13131116, 43111412, 24111251}, %  461
         {23131124, 43111511, 14111342}, %  462
         {33131132, 33112115, 14111441}, %  463
         {12222116, 43112123, 14112152}, %  464
         {13131215, 53112131, 14112251}, %  465
         {23131223, 33112214, 54113111}, %  466
         {33131231, 43112222, 44114111}, %  467
         {11313116, 33112313, 34115111}, %  468
         {12222215, 43112321, 24116111}, %  469
         {22222223, 33112412, 13211135}, %  470
         {32222231, 33112511, 23211143}, %  471
         {11313215, 23113115, 33211151}, %  472
         {21313223, 33113123, 13211234}, %  473
         {31313231, 43113131, 23211242}, %  474
         {23131421, 23113214, 13211333}, %  475
         {11313314, 33113222, 23211341}, %  476
         {12222413, 23113313, 13211432}, %  477
         {22222421, 33113321, 13211531}, %  478
         {11313413, 23113412, 14121143}, %  479
         {13131611, 23113511, 24121151}, %  480
         {13132124, 13114115, 13212143}, %  481
         {23132132, 23114123, 14121242}, %  482
         {12223124, 33114131, 13212242}, %  483
         {13132223, 13114214, 14121341}, %  484
         {23132231, 23114222, 13212341}, %  485
         {11314124, 13114313, 14122151}, %  486
         {12223223, 23114321, 13213151}, %  487
         {22223231, 13114412, 12311126}, %  488
         {11314223, 13114511, 22311134}, %  489
         {21314231, 13115123, 32311142}, %  490
         {13132421, 23115131, 12311225}, %  491
         {12223421, 13115222, 22311233}, %  492
         {13133132, 13115321, 32311241}, %  493
         {12224132, 13116131, 12311324}, %  494
         {13133231, 52211114, 22311332}, %  495
         {11315132, 62211122, 12311423}, %  496
         {12224231, 12211163, 22311431}, %  497
         {31321115, 52211213, 12311522}, %  498
         {41321123, 62211221, 12311621}, %  499
         {51321131, 12211262, 13221134}, %  500
         {31321214, 52211312, 23221142}, %  501
         {41321222, 12211361, 12312134}, %  502
         {31321313, 52211411, 13221233}, %  503
         {41321321, 43121114, 23221241}, %  504
         {31321412, 53121122, 12312233}, %  505
         {31321511, 42212114, 13221332}, %  506
         {22231115, 43121213, 12312332}, %  507
         {32231123, 53121221, 13221431}, %  508
         {42231131, 42212213, 12312431}, %  509
         {21322115, 52212221, 14131142}, %  510
         {22231214, 42212312, 13222142}, %  511
         {41322131, 43121411, 14131241}, %  512
         {21322214, 42212411, 12313142}, %  513

         {31322222, 33122114, 13222241}, %  514
         {32231321, 43122122, 12313241}, %  515
         {21322313, 32213114, 21411125}, %  516
         {22231412, 33122213, 31411133}, %  517
         {21322412, 43122221, 41411141}, %  518
         {22231511, 32213213, 11411216}, %  519
         {21322511, 42213221, 21411224}, %  520
         {13141115, 32213312, 31411232}, %  521
         {23141123, 33122411, 11411315}, %  522
         {33141131, 32213411, 21411323}, %  523
         {12232115, 23123114, 31411331}, %  524
         {13141214, 33123122, 11411414}, %  525
         {23141222, 22214114, 21411422}, %  526
         {11323115, 23123213, 11411513}, %  527
         {12232214, 33123221, 21411521}, %  528
         {22232222, 22214213, 11411612}, %  529
         {23141321, 32214221, 12321125}, %  530
         {11323214, 22214312, 22321133}, %  531
         {21323222, 23123411, 32321141}, %  532
         {13141412, 22214411, 11412125}, %  533
         {11323313, 13124114, 12321224}, %  534
         {12232412, 23124122, 22321232}, %  535
         {13141511, 12215114, 11412224}, %  536
         {12232511, 13124213, 21412232}, %  537
         {13142123, 23124221, 22321331}, %  538
         {23142131, 12215213, 11412323}, %  539
         {12233123, 22215221, 12321422}, %  540
         {13142222, 12215312, 11412422}, %  541
         {11324123, 13124411, 12321521}, %  542
         {12233222, 12215411, 11412521}, %  543
         {13142321, 13125122, 13231133}, %  545
         {11324222, 12216122, 23231141}, %  544
         {12233321, 13125221, 12322133}, %  546
         {13143131, 12216221, 13231232}, %  547
         {11325131, 61311113, 11413133}, %  548
         {31331114, 11311154, 12322232}, %  549
         {41331122, 21311162, 13231331}, %  550
         {31331213, 61311212, 11413232}, %  551
         {41331221, 11311253, 12322331}, %  552
         {31331312, 21311261, 11413331}, %  553
         {31331411, 61311311, 14141141}, %  554
         {22241114, 11311352, 13232141}, %  555
         {32241122, 11311451, 12323141}, %  556
         {21332114, 52221113, 11414141}, %  557
         {22241213, 62221121, 11421116}, %  558
         {32241221, 12221162, 21421124}, %  559
         {21332213, 51312113, 31421132}, %  560
         {31332221, 61312121, 11421215}, %  561
         {21332312, 11312162, 21421223}, %  562
         {22241411, 12221261, 31421231}, %  563
         {21332411, 51312212, 11421314}, %  564
         {13151114, 52221311, 21421322}, %  565
         {23151122, 11312261, 11421413}, %  566
         {12242114, 51312311, 21421421}, %  567
         {13151213, 43131113, 11421512}, %  568
         {23151221, 53131121, 11421611}, %  569
         {11333114, 42222113, 12331124}, %  570
         {12242213, 43131212, 22331132}, %  571
         {22242221, 41313113, 11422124}, %  572
         {11333213, 51313121, 12331223}, %  573
         {21333221, 43131311, 22331231}, %  574
         {13151411, 41313212, 11422223}, %  575
         {11333312, 42222311, 21422231}, %  576
         {12242411, 41313311, 11422322}, %  577
         {11333411, 33132113, 12331421}, %  578
         {12243122, 43132121, 11422421}, %  579

         {11334122, 32223113, 13241132}, %  580
         {11334221, 33132212, 12332132}, %  581
         {41341121, 31314113, 13241231}, %  582
         {31341311, 32223212, 11423132}, %  583
         {32251121, 33132311, 12332231}, %  584
         {22251212, 31314212, 11423231}, %  585
         {22251311, 32223311, 11431115}, %  586
         {13161113, 31314311, 21431123}, %  587
         {12252113, 23133113, 31431131}, %  588
         {11343113, 33133121, 11431214}, %  589
         {13161311, 22224113, 21431222}, %  590
         {12252311, 23133212, 11431313}, %  591
         {24111125, 21315113, 21431321}, %  592
         {14111216, 22224212, 11431412}, %  593
         {24111224, 23133311, 11431511}, %  594
         {14111315, 21315212, 12341123}, %  595
         {24111323, 22224311, 22341131}, %  596
         {34111331, 21315311, 11432123}, %  597
         {14111414, 13134113, 12341222}, %  598
         {24111422, 23134121, 11432222}, %  599
         {14111513, 12225113, 12341321}, %  600
         {24111521, 13134212, 11432321}, %  601
         {14112125, 11316113, 13251131}, %  602
         {24112133, 12225212, 12342131}, %  603
         {34112141, 13134311, 11433131}, %  604
         {14112224, 11316212, 11441114}, %  605
         {24112232, 12225311, 21441122}, %  606
         {14112323, 11316311, 11441213}, %  607
         {24112331, 13135121, 21441221}, %  608
         {14112422, 12226121, 11441312}, %  609
         {14112521, 61321112, 11441411}, %  610
         {14113133, 11321153, 12351122}, %  611
         {24113141, 21321161, 11442122}, %  612
         {14113232, 61321211, 12351221}, %  613
         {14113331, 11321252, 11442221}, %  614
         {14114141, 11321351, 11451113}, %  615
         {23211116, 52231112, 21451121}, %  616
         {33211124, 12231161, 11451212}, %  617
         {43211132, 51322112, 11451311}, %  618
         {23211215, 52231211, 12361121}, %  619
         {33211223, 11322161, 11452121}, %  620
         {23211314, 51322211, 15111143}, %  621
         {33211322, 43141112, 25111151}, %  622
         {23211413, 42232112, 15111242}, %  623
         {33211421, 43141211, 15111341}, %  624
         {23211512, 41323112, 15112151}, %  625
         {14121116, 42232211, 14211134}, %  626
         {24121124, 41323211, 24211142}, %  627
         {34121132, 33142112, 14211233}, %  628
         {13212116, 32233112, 24211241}, %  629
         {14121215, 33142211, 14211332}, %  630
         {33212132, 31324112, 14211431}, %  631
         {34121231, 32233211, 15121142}, %  632
         {13212215, 31324211, 14212142}, %  633
         {23212223, 23143112, 15121241}, %  634
         {33212231, 22234112, 14212241}, %  635
         {13212314, 23143211, 13311125}, %  636
         {14121413, 21325112, 23311133}, %  637
         {24121421, 22234211, 33311141}, %  638
         {13212413, 21325211, 13311224}, %  639
         {23212421, 13144112, 23311232}, %  640
         {14121611, 12235112, 13311323}, %  641
         {14122124, 13144211, 23311331}, %  642
         {24122132, 11326112, 13311422}, %  643
         {13213124, 12235211, 13311521}, %  644
         {14122223, 11326211, 14221133}, %  645

         {24122231, 61331111, 24221141}, %  646
         {13213223, 11331152, 13312133}, %  647
         {23213231, 11331251, 14221232}, %  648
         {13213322, 52241111, 13312232}, %  649
         {14122421, 51332111, 14221331}, %  650
         {14123132, 43151111, 13312331}, %  651
         {13214132, 42242111, 15131141}, %  652
         {14123231, 41333111, 14222141}, %  653
         {13214231, 33152111, 13313141}, %  654
         {32311115, 32243111, 12411116}, %  655
         {42311123, 31334111, 22411124}, %  656
         {52311131, 23153111, 32411132}, %  657
         {32311214, 22244111, 12411215}, %  658
         {42311222, 21335111, 22411223}, %  659
         {32311313, 13154111, 32411231}, %  660
         {42311321, 12245111, 12411314}, %  661
         {32311412, 11336111, 22411322}, %  662
         {32311511, 11341151, 12411413}, %  663
         {23221115, 44111114, 22411421}, %  664
         {33221123, 54111122, 12411512}, %  665
         {22312115, 44111213, 12411611}, %  666
         {23221214, 54111221, 13321124}, %  667
         {33221222, 44111312, 23321132}, %  668
         {22312214, 44111411, 12412124}, %  669
         {32312222, 34112114, 13321223}, %  670
         {33221321, 44112122, 23321231}, %  671
         {22312313, 34112213, 12412223}, %  672
         {23221412, 44112221, 22412231}, %  673
         {22312412, 34112312, 12412322}, %  674
         {23221511, 34112411, 13321421}, %  675
         {22312511, 24113114, 12412421}, %  676
         {14131115, 34113122, 14231132}, %  677
         {24131123, 24113213, 13322132}, %  678
         {13222115, 34113221, 14231231}, %  679
         {14131214, 24113312, 12413132}, %  680
         {33222131, 24113411, 13322231}, %  681
         {12313115, 14114114, 12413231}, %  682
         {13222214, 24114122, 21511115}, %  683
         {23222222, 14114213, 31511123}, %  684
         {24131321, 24114221, 41511131}, %  685
         {12313214, 14114312, 21511214}, %  686
         {22313222, 14114411, 31511222}, %  687
         {14131412, 14115122, 21511313}, %  688
         {12313313, 14115221, 31511321}, %  689
         {13222412, 53211113, 21511412}, %  690
         {14131511, 63211121, 21511511}, %  691
         {13222511, 13211162, 12421115}, %  692
         {14132123, 53211212, 22421123}, %  693
         {24132131, 13211261, 32421131}, %  694
         {13223123, 53211311, 11512115}, %  695
         {14132222, 44121113, 12421214}, %  696
         {12314123, 54121121, 22421222}, %  697
         {13223222, 43212113, 11512214}, %  698
         {14132321, 44121212, 21512222}, %  699
         {12314222, 43212212, 22421321}, %  700
         {13223321, 44121311, 11512313}, %  701
         {14133131, 43212311, 12421412}, %  702
         {13224131, 34122113, 11512412}, %  703
         {12315131, 44122121, 12421511}, %  704
         {41411114, 33213113, 11512511}, %  705
         {51411122, 34122212, 13331123}, %  706
         {41411213, 33213212, 23331131}, %  707
         {51411221, 34122311, 12422123}, %  708
         {41411312, 33213311, 13331222}, %  709
         {41411411, 24123113, 11513123}, %  710
         {32321114, 34123121, 12422222}, %  711

         {42321122, 23214113, 13331321}, %  712
         {31412114, 24123212, 11513222}, %  713
         {41412122, 23214212, 12422321}, %  714
         {42321221, 24123311, 11513321}, %  715
         {31412213, 23214311, 14241131}, %  716
         {41412221, 14124113, 13332131}, %  717
         {31412312, 24124121, 12423131}, %  718
         {32321411, 13215113, 11514131}, %  719
         {31412411, 14124212, 21521114}, %  720
         {23231114, 13215212, 31521122}, %  721
         {33231122, 14124311, 21521213}, %  722
         {22322114, 13215311, 31521221}, %  723
         {23231213, 14125121, 21521312}, %  724
         {33231221, 13216121, 21521411}, %  725
         {21413114, 62311112, 12431114}, %  726
         {22322213, 12311153, 22431122}, %  727
         {32322221, 22311161, 11522114}, %  728
         {21413213, 62311211, 12431213}, %  729
         {31413221, 12311252, 22431221}, %  730
         {23231411, 12311351, 11522213}, %  731
         {21413312, 53221112, 21522221}, %  732
         {22322411, 13221161, 11522312}, %  733
         {21413411, 52312112, 12431411}, %  734
         {14141114, 53221211, 11522411}, %  735
         {24141122, 12312161, 13341122}, %  736
         {13232114, 52312211, 12432122}, %  737
         {14141213, 44131112, 13341221}, %  738
         {24141221, 43222112, 11523122}, %  739
         {12323114, 44131211, 12432221}, %  740
         {13232213, 42313112, 11523221}, %  741
         {23232221, 43222211, 21531113}, %  742
         {11414114, 42313211, 31531121}, %  743
         {12323213, 34132112, 21531212}, %  744
         {22323221, 33223112, 21531311}, %  745
         {14141411, 34132211, 12441113}, %  746
         {11414213, 32314112, 22441121}, %  747
         {21414221, 33223211, 11532113}, %  748
         {13232411, 32314211, 12441212}, %  749
         {11414312, 24133112, 11532212}, %  750
         {14142122, 23224112, 12441311}, %  751
         {13233122, 24133211, 11532311}, %  752
         {14142221, 22315112, 13351121}, %  753
         {12324122, 23224211, 12442121}, %  754
         {13233221, 22315211, 11533121}, %  755
         {11415122, 14134112, 21541112}, %  756
         {12324221, 13225112, 21541211}, %  757
         {11415221, 14134211, 12451112}, %  758
         {41421113, 12316112, 11542112}, %  759
         {51421121, 13225211, 12451211}, %  760
         {41421212, 12316211, 11542211}, %  761
         {41421311, 11411144, 16111142}, %  762
         {32331113, 21411152, 16111241}, %  763
         {42331121, 11411243, 15211133}, %  764
         {31422113, 21411251, 25211141}, %  765
         {41422121, 11411342, 15211232}, %  766
         {31422212, 11411441, 15211331}, %  767
         {32331311, 62321111, 16121141}, %  768
         {31422311, 12321152, 15212141}, %  769
         {23241113, 61412111, 14311124}, %  770
         {33241121, 11412152, 24311132}, %  771
         {22332113, 12321251, 14311223}, %  772
         {23241212, 11412251, 24311231}, %  773
         {21423113, 53231111, 14311322}, %  774
         {22332212, 52322111, 14311421}, %  775
         {23241311, 51413111, 15221132}, %  776
         {21423212, 44141111, 14312132}, %  777

         {22332311, 43232111, 15221231}, %  778
         {21423311, 42323111, 14312231}, %  779
         {14151113, 41414111, 13411115}, %  780
         {24151121, 34142111, 23411123}, %  781
         {13242113, 33233111, 33411131}, %  782
         {23242121, 32324111, 13411214}, %  783
         {12333113, 31415111, 23411222}, %  784
         {13242212, 24143111, 13411313}, %  785
         {14151311, 23234111, 23411321}, %  786
         {11424113, 22325111, 13411412}, %  787
         {12333212, 21416111, 13411511}, %  788
         {13242311, 14144111, 14321123}, %  789
         {11424212, 13235111, 24321131}, %  790
         {12333311, 12326111, 13412123}, %  791
         {11424311, 11421143, 23412131}, %  792
         {13243121, 21421151, 13412222}, %  793
         {11425121, 11421242, 14321321}, %  794
         {41431211, 11421341, 13412321}, %  795
         {31432112, 12331151, 15231131}, %  796
         {31432211, 11422151, 14322131}, %  797
         {22342112, 11431142, 13413131}, %  798
         {21433112, 11431241, 22511114}, %  799
         {21433211, 11441141, 32511122}, %  800
         {13252112, 45111113, 22511213}, %  801
         {12343112, 45111212, 32511221}, %  802
         {11434112, 45111311, 22511312}, %  803
         {11434211, 35112113, 22511411}, %  804
         {15111116, 45112121, 13421114}, %  805
         {15111215, 35112212, 23421122}, %  806
         {25111223, 35112311, 12512114}, %  807
         {15111314, 25113113, 22512122}, %  808
         {15111413, 35113121, 23421221}, %  809
         {15111512, 25113212, 12512213}, %  810
         {15112124, 25113311, 13421312}, %  811
         {15112223, 15114113, 12512312}, %  812
         {15112322, 25114121, 13421411}, %  813
         {15112421, 15114212, 12512411}, %  814
         {15113132, 15114311, 14331122}, %  815
         {15113231, 15115121, 13422122}, %  816
         {24211115, 54211112, 14331221}, %  817
         {24211214, 14211161, 12513122}, %  818
         {34211222, 54211211, 13422221}, %  819
         {24211313, 45121112, 12513221}, %  820
         {34211321, 44212112, 31611113}, %  821
         {24211412, 45121211, 41611121}, %  822
         {24211511, 44212211, 31611212}, %  823
         {15121115, 35122112, 31611311}, %  824
         {25121123, 34213112, 22521113}, %  825
         {14212115, 35122211, 32521121}, %  826
         {24212123, 34213211, 21612113}, %  827
         {25121222, 25123112, 22521212}, %  828
         {14212214, 24214112, 21612212}, %  829
         {24212222, 25123211, 22521311}, %  830
         {14212313, 24214211, 21612311}, %  831
         {24212321, 15124112, 13431113}, %  832
         {14212412, 14215112, 23431121}, %  833
         {15121511, 15124211, 12522113}, %  834
         {14212511, 14215211, 13431212}, %  835
         {15122123, 63311111, 11613113}, %  836
         {25122131, 13311152, 12522212}, %  837
         {14213123, 13311251, 13431311}, %  838
         {24213131, 54221111, 11613212}, %  839
         {14213222, 53312111, 12522311}, %  840
         {15122321, 45131111, 11613311}, %  841
         {14213321, 44222111, 14341121}, %  842
         {15123131, 43313111, 13432121}, %  843

         {14214131, 35132111, 12523121}, %  844
         {33311114, 34223111, 11614121}, %  845
         {33311213, 33314111, 31621112}, %  846
         {33311312, 25133111, 31621211}, %  847
         {33311411, 24224111, 22531112}, %  848
         {24221114, 23315111, 21622112}, %  849
         {23312114, 15134111, 22531211}, %  850
         {33312122, 14225111, 21622211}, %  851
         {34221221, 13316111, 13441112}, %  852
         {23312213, 12411143, 12532112}, %  853
         {33312221, 22411151, 13441211}, %  854
         {23312312, 12411242, 11623112}, %  855
         {24221411, 12411341, 12532211}, %  856
         {23312411, 13321151, 11623211}, %  857
         {15131114, 12412151, 31631111}, %  858
         {14222114, 11511134, 22541111}, %  859
         {15131213, 21511142, 21632111}, %  860
         {25131221, 11511233, 13451111}, %  861
         {13313114, 21511241, 12542111}, %  862
         {14222213, 11511332, 11633111}, %  863
         {15131312, 11511431, 16211132}, %  864
         {13313213, 12421142, 16211231}, %  865
         {14222312, 11512142, 15311123}, %  866
         {15131411, 12421241, 25311131}, %  867
         {13313312, 11512241, 15311222}, %  868
         {14222411, 11521133, 15311321}, %  869
         {15132122, 21521141, 16221131}, %  870
         {14223122, 11521232, 15312131}, %  871
         {15132221, 11521331, 14411114}, %  872
         {13314122, 12431141, 24411122}, %  873
         {14223221, 11522141, 14411213}, %  874
         {13314221, 11531132, 24411221}, %  875
         {42411113, 11531231, 14411312}, %  876
         {42411212, 11541131, 14411411}, %  877
         {42411311, 36112112, 15321122}, %  878
         {33321113, 36112211, 14412122}, %  879
         {32412113, 26113112, 15321221}, %  880
         {42412121, 26113211, 14412221}, %  881
         {32412212, 16114112, 23511113}, %  882
         {33321311, 16114211, 33511121}, %  883
         {32412311, 45212111, 23511212}, %  884
         {24231113, 36122111, 23511311}, %  885
         {34231121, 35213111, 14421113}, %  886
         {23322113, 26123111, 24421121}, %  887
         {33322121, 25214111, 13512113}, %  888
         {22413113, 16124111, 23512121}, %  889
         {23322212, 15215111, 13512212}, %  890
         {24231311, 14311151, 14421311}, %  891
         {22413212, 13411142, 13512311}, %  892
         {23322311, 13411241, 15331121}, %  893
         {22413311, 12511133, 14422121}, %  894
         {15141113, 22511141, 13513121}, %  895
         {25141121, 12511232, 32611112}, %  896
         {14232113, 12511331, 32611211}, %  897
         {24232121, 13421141, 23521112}, %  898
         {13323113, 12512141, 22612112}, %  899
         {14232212, 11611124, 23521211}, %  900
         {15141311, 21611132, 22612211}, %  901
         {12414113, 11611223, 14431112}, %  902
         {13323212, 21611231, 13522112}, %  903
         {14232311, 11611322, 14431211}, %  904
         {12414212, 11611421, 12613112}, %  905
         {13323311, 12521132, 13522211}, %  906
         {15142121, 11612132, 12613211}, %  907
         {14233121, 12521231, 32621111}, %  908
         {13324121, 11612231, 23531111}, %  909

         {12415121, 11621123, 22622111}, %  910
         {51511112, 21621131, 14441111}, %  911
         {51511211, 11621222, 13532111}, %  912
         {42421112, 11621321, 12623111}, %  913
         {41512112, 12531131, 16311122}, %  914
         {42421211, 11622131, 16311221}, %  915
         {41512211, 11631122, 15411113}, %  916
         {33331112, 11631221, 25411121}, %  917
         {32422112, 14411141, 15411212}, %  918
         {33331211, 13511132, 15411311}, %  919
         {31513112, 13511231, 16321121}, %  920
         {32422211, 12611123, 15412121}, %  921
         {31513211, 22611131, 24511112}, %  922
         {24241112, 12611222, 24511211}, %  923
         {23332112, 12611321, 15421112}, %  924
         {24241211, 13521131, 14512112}, %  925
         {22423112, 12612131, 15421211}, %  926
         {23332211, 12621122, 14512211}, %  927
         {21514112, 12621221, 33611111}  %  928
        }).

-define(ECC_POLINOMS,
        {
         % Level 0
         {027, 917},
         % Level 1
         {522, 568, 723, 809},
         % Level 2
         {237, 308, 436, 284, 646, 653, 428, 379},
         % Level 3
         {274, 562, 232, 755, 599, 524, 801, 132, 295, 116, 442, 428, 295, 042, 176, 065},
         % Level 4
         {361, 575, 922, 525, 176, 586, 640, 321, 536, 742, 677, 742, 687, 284, 193, 517,
          273, 494, 263, 147, 593, 800, 571, 320, 803, 133, 231, 390, 685, 330, 063, 410},
         % Level 5
         {539, 422, 006, 093, 862, 771, 453, 106, 610, 287, 107, 505, 733, 877, 381, 612,
          723, 476, 462, 172, 430, 609, 858, 822, 543, 376, 511, 400, 672, 762, 283, 184,
          440, 035, 519, 031, 460, 594, 225, 535, 517, 352, 605, 158, 651, 201, 488, 502,
          648, 733, 717, 083, 404, 097, 280, 771, 840, 629, 004, 381, 843, 623, 264, 543}
        }).

-define(CHARSET_TEXT,
        [% ALPHA, LOWER, MIXED, PUNCTUATION
         { $A,  $a,  $0,  $;,  0},
         { $B,  $b,  $1,  $<,  1},
         { $C,  $c,  $2,  $>,  2},
         { $D,  $d,  $3,  $@,  3},
         { $E,  $e,  $4,  $[,  4},
         { $F,  $f,  $5, $\\,  5},
         { $G,  $g,  $6,  $],  6},
         { $H,  $h,  $7,  $_,  7},
         { $I,  $i,  $8,  $`,  8},
         { $J,  $j,  $9,  $~,  9},
         { $K,  $k,  $&,  $!, 10},
         { $L,  $l, $\n, $\n, 11},
         { $M,  $m, $\t, $\t, 12},
         { $N,  $n,  $,,  $,, 13},
         { $O,  $o,  $:,  $:, 14},
         { $P,  $p,  $#, $\r, 15},
         { $Q,  $q,  $-,  $-, 16},
         { $R,  $r,  $.,  $., 17},
         { $S,  $s,  $$,  $$, 18},
         { $T,  $t,  $/,  $/, 19},
         { $U,  $u,  $+,  $", 20},
         { $V,  $v,  $%,  $|, 21},
         { $W,  $w,  $*,  $*, 22},
         { $X,  $x,  $=,  $(, 23},
         { $Y,  $y,  $^,  $), 24},
         { $Z,  $z,  pl,  $?, 25},
         {$\s, $\s, $\s,  ${, 26},
         { ll,  as,  ll,  $}, 27},
         { ml,  ml,  al,  $', 28},
         { ps,  ps,  ps,  al, 29}
        ]).

%% Subsets control characters
% al - switch to the Alpha subset
% as - shift (1 char) to the Alpha subset
% ll - switch to the Lower subset
% ml - switch to the Mixed subset
% pl - switch to the Punctuation subset
% ps - shift (1 char) to the Punctuation subset


-define(START_SCHEMA, 81111113).
-define(STOP_SCHEMA, 711311121).

-define(MODE_TEXT, 1).
-define(MODE_DIGITS, 2).
-define(MODE_BYTES, 3).

-define(SUBMODE_ALPHA, 1).
-define(SUBMODE_LOWER, 2).
-define(SUBMODE_MIXED, 3).
-define(SUBMODE_PUNCT, 4).


-define(TEXT_MODE_FIX, 900).
-define(BYTES_MODE_FIX1, 901).
-define(DIGIT_MODE_FIX, 902).
-define(BYTES_MODE_SHIFT, 913).
-define(LINKED_COMP_NON_GS1, 918).
-define(LINKED_COMP_GS1, 920).
-define(INIT_READER, 921).
-define(MACRO_TERM, 922).
-define(MACRO_ARB_FIELD, 923).
-define(BYTES_MODE_FIX2, 924).
-define(MACRO_CTL_BEGIN, 928).

-define(LATCH_ALPHA_TO_LOWER, 27).
-define(LATCH_ALPHA_TO_MIXED, 28).
-define(LATCH_LOWER_TO_MIXED, 28).
-define(LATCH_MIXED_TO_ALPHA, 28).
-define(LATCH_MIXED_TO_LOWER, 27).
-define(LATCH_MIXED_TO_PUNCT, 25).
-define(LATCH_PUNCT_TO_ALPHA, 29).

-define(SHIFT_TO_PUNCT, 29).
-define(SHIFT_LOWER_TO_ALPHA, 27).
-define(TEXT_PAD, 29).

-define(CODEWORD_PAD, ?TEXT_MODE_FIX).

 -define(ROW_HEIGHT, 5).

-define(DEFAULT_OPTS,
        #{
          quiet => true
         }).

-spec encode(Text) -> {Width, Height, BarCodeBitmap} | no_return() when
  Text :: binary(), Width::pos_integer(),
  Height :: pos_integer(), BarCodeBitmap :: bitstring().
encode(Text) ->
%    Options = maps:merge(?DEFAULT_OPTS, InOpts),
    Chars = binary_to_list(Text),
    Codewords = chars_to_codewords(?MODE_TEXT, ?SUBMODE_ALPHA, Chars, []),
    RawSize = length(Codewords),
    RawSize =< 925 orelse error(incorrect_text),
    Size = RawSize + 1,
    EccLevel = choose_ecc_level(Size),
    EccSize = ecc_size(EccLevel),
    {ColsNum, RowsNum, PadsNum} = choose_matrix_size(Size + EccSize),
    io:format("Cols:~w, Rows:~w Pads:~w~n", [ColsNum, RowsNum, PadsNum]),
    Pads = lists:duplicate(PadsNum, ?CODEWORD_PAD),
    DataAndPad = [Size | Codewords] ++ Pads,
    EccCodewords = calc_ecc(DataAndPad, EccLevel),
    FullCodewords = DataAndPad ++ EccCodewords,
    BitmapList = encode_codewords(ColsNum, RowsNum, EccLevel, FullCodewords),
    Width = bit_size(hd(BitmapList)),
    Rows = length(BitmapList),
    {Width, Rows, list_to_bitstring(BitmapList)}.

chars_to_codewords(Mode, SubMode, [_|_] = Chars, CodewordsAcc) ->
    {Digits, RestChars} = split_digit_chars(Chars),
    if length(Digits) >= 13 ->
           Values = encode_digits(Digits),
           chars_to_codewords(?MODE_DIGITS, SubMode, RestChars, CodewordsAcc ++ Values);
       true ->
           {Text, RestChars2} = split_text_chars(Chars),
           if length(Text) >= 5 ->
                  {Values, OutSubMode} = encode_text(Text, Mode, SubMode),
                  chars_to_codewords(?MODE_TEXT, OutSubMode, RestChars2, CodewordsAcc ++ Values);
              true ->
                  {Bytes, RestChars3} = split_bytes(Chars),
                  if length(Bytes) == 1 andalso Mode == ?MODE_TEXT ->
                         Values = encode_one_byte(Bytes),
                         chars_to_codewords(Mode, SubMode, RestChars3, CodewordsAcc ++ Values);
                     true ->
                         Values = encode_bytes(Bytes),
                         chars_to_codewords(?MODE_BYTES, SubMode, RestChars3, CodewordsAcc ++ Values)
                  end
            end
    end;

chars_to_codewords(_, _, [], CodewordsAcc) ->
    io:format("Codewords: ~w~n", [CodewordsAcc]),
    CodewordsAcc.


split_digit_chars(Chars) ->
    lists:splitwith(fun(Char) -> Char >= $0 andalso Char =< $9 end, Chars).

split_text_chars(Chars) ->
    lists:splitwith(fun(Char) -> (Char >= 32 andalso Char =< 126) orelse
                                 Char == 9 orelse Char == 10 orelse Char == 13
                    end, Chars).

split_bytes(Chars) ->
    split_bytes(Chars, []).

split_bytes([Char | Rest] = Chars, Acc) ->
    {Digits, _} = split_digit_chars(Chars),
    {Text, _} = split_text_chars(Chars),
    if length(Digits) >= 13 orelse length(Text) >= 5 ->
           {lists:reverse(Acc), Chars};
       true ->
           split_bytes(Rest, [Char | Acc])
    end;
split_bytes([], Acc) ->
    {lists:reverse(Acc), []}.



encode_digits(Chars) ->
    encode_digits(Chars, [?DIGIT_MODE_FIX]).

encode_digits([_|_] = Chars, ValuesAcc) ->
    {Digits, RestChars} = if length(Chars) < 44 -> {Chars, []};
                             true -> lists:split(44, Chars)
                          end,
    Number = list_to_integer([$1 | Digits]),
    Values = number_to_base900(Number),
    encode_digits(RestChars, ValuesAcc ++ Values);
encode_digits([], ValuesAcc) ->
    ValuesAcc.

number_to_base900(Number) ->
    number_to_base900(Number, []).
number_to_base900(Number, Acc) ->
    D = Number rem 900,
    NewNumber = Number div 900,
    if NewNumber == 0 ->
           [D | Acc];
       true ->
           number_to_base900(NewNumber, [D | Acc])
    end.


encode_text(Chars, Mode, SubMode) ->
    if Mode == ?MODE_TEXT ->
           {Chars2, NewSubMode} = prepare_chars(Chars, [], SubMode),
           {chars_to_base900(Chars2), NewSubMode};
       true ->
           {Chars2, NewSubMode} = prepare_chars(Chars, [], ?SUBMODE_ALPHA),
           {[?TEXT_MODE_FIX | chars_to_base900(Chars2)], NewSubMode}
    end.

prepare_chars([Char | RestChars] = Chars, Acc, SubMode) ->
%    io:format("prepare_chars: Chars:~ts~n           Acc:~w~n            SubMode: ~w~n~n", [Chars, Acc, SubMode]),
    case is_submode_char(SubMode, Char) of
        {true, Value} ->
            prepare_chars(RestChars, [Value | Acc], SubMode);
        false ->
            case {SubMode, choose_submode(Chars)} of
               {_, {?SUBMODE_PUNCT, 1}} ->
                   {true, Value} = is_submode_char(?SUBMODE_PUNCT, Char),
                   prepare_chars(RestChars, [Value, ?SHIFT_TO_PUNCT| Acc], SubMode);
               {?SUBMODE_ALPHA, {?SUBMODE_LOWER, _Length}} ->
                   prepare_chars(Chars, [?LATCH_ALPHA_TO_LOWER| Acc], ?SUBMODE_LOWER);
               {?SUBMODE_ALPHA, {?SUBMODE_MIXED, _Length}} ->
                   prepare_chars(Chars, [?LATCH_ALPHA_TO_MIXED| Acc], ?SUBMODE_MIXED);
               {?SUBMODE_ALPHA, {?SUBMODE_PUNCT, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_PUNCT, ?LATCH_ALPHA_TO_MIXED| Acc], ?SUBMODE_PUNCT);

               {?SUBMODE_LOWER, {?SUBMODE_ALPHA, 1}} ->
                   {true, Value} = is_submode_char(?SUBMODE_ALPHA, Char),
                   prepare_chars(RestChars, [Value, ?SHIFT_LOWER_TO_ALPHA| Acc], SubMode);
               {?SUBMODE_LOWER, {?SUBMODE_ALPHA, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_ALPHA, ?LATCH_LOWER_TO_MIXED| Acc], ?SUBMODE_ALPHA);
               {?SUBMODE_LOWER, {?SUBMODE_MIXED, _Length}} ->
                   prepare_chars(Chars, [?LATCH_LOWER_TO_MIXED| Acc], ?SUBMODE_MIXED);
               {?SUBMODE_LOWER, {?SUBMODE_PUNCT, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_PUNCT, ?LATCH_LOWER_TO_MIXED| Acc], ?SUBMODE_PUNCT);

               {?SUBMODE_MIXED, {?SUBMODE_ALPHA, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_ALPHA| Acc], ?SUBMODE_ALPHA);
               {?SUBMODE_MIXED, {?SUBMODE_LOWER, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_LOWER| Acc], ?SUBMODE_LOWER);
               {?SUBMODE_MIXED, {?SUBMODE_PUNCT, _Length}} ->
                   prepare_chars(Chars, [?LATCH_MIXED_TO_PUNCT| Acc], ?SUBMODE_PUNCT);

               {?SUBMODE_PUNCT, {?SUBMODE_ALPHA, _Length}} ->
                   prepare_chars(Chars, [?LATCH_PUNCT_TO_ALPHA| Acc], ?SUBMODE_ALPHA);
               {?SUBMODE_PUNCT, {?SUBMODE_LOWER, _Length}} ->
                   prepare_chars(Chars, [?LATCH_ALPHA_TO_LOWER, ?LATCH_PUNCT_TO_ALPHA| Acc], ?SUBMODE_LOWER);
               {?SUBMODE_PUNCT, {?SUBMODE_MIXED, _Length}} ->
                   prepare_chars(Chars, [?LATCH_ALPHA_TO_MIXED, ?LATCH_PUNCT_TO_ALPHA| Acc], ?SUBMODE_MIXED)
           end
    end;
prepare_chars([], Acc, SubMode) ->
    Acc2 = if length(Acc) rem 2 == 1 -> [?TEXT_PAD | Acc];
              true -> Acc
           end,
    {lists:reverse(Acc2), SubMode}.

is_submode_char(SubMode, Char) ->
    case lists:keyfind(Char, SubMode, ?CHARSET_TEXT) of
        false -> false;
        {_, _, _, _, Value} -> {true, Value}
    end.

choose_submode(Chars) ->
    I = [{?SUBMODE_ALPHA, 0, false},
         {?SUBMODE_LOWER, 0, false},
         {?SUBMODE_MIXED, 0, false},
         {?SUBMODE_PUNCT, 0, false}],
    R = lists:foldl(fun(Char, Acc) ->
                           update_submodes_counter(Acc, Char)
                    end, I, Chars),
    {SubMode, Length, _} = hd(lists:sort(fun({_,A,_}, {_, B, _}) -> A > B end, R)),
    {SubMode, Length}.

update_submodes_counter(Counters, Char) ->
    lists:map(fun({_, _, true} = C) -> C;
                 ({SubMode, Num, _}) ->
                     case is_submode_char(SubMode, Char) of
                         {true, _} -> {SubMode, Num + 1, false};
                         false -> {SubMode, Num, true}
                     end
              end, Counters).


chars_to_base900([ChH, ChL | RestChars]) ->
    [ChH * 30 + ChL | chars_to_base900(RestChars)];
chars_to_base900([]) -> [].


encode_one_byte([Byte]) ->
    [?BYTES_MODE_SHIFT, Byte].

encode_bytes(Chars) ->
    BytesModeCodeword = if length(Chars) rem 6 == 0 -> ?BYTES_MODE_FIX2;
                           true -> ?BYTES_MODE_FIX1
                        end,
    [BytesModeCodeword | bytes_mode_values(Chars)].

bytes_mode_values(Chars) when length(Chars) >= 6 ->
    {Bytes, Rest} = lists:split(6, Chars),
    bytes_to_base900(Bytes) ++ bytes_mode_values(Rest);
bytes_mode_values(Chars) ->
    Chars.

bytes_to_base900([B5, B4, B3, B2, B1, B0]) ->
    Integer = binary:decode_unsigned(<<B5:8, B4:8, B3:8, B2:8, B1:8, B0:8>>),
    bytes_to_base900(Integer, []).

bytes_to_base900(_, Acc) when length(Acc) == 5 ->
    Acc;
bytes_to_base900(Integer, Acc) ->
    bytes_to_base900(Integer div 900, [Integer rem 900 | Acc]).



encode_codewords(Cols, Rows, EccLevel, Codewords) ->
    RowsList = split_rows(Cols, Codewords),
    StartBits = schema_to_bits(?START_SCHEMA),
    StopBits = schema_to_bits(?STOP_SCHEMA),
    {Bitmaps, _} =
        lists:mapfoldl(fun(Row, RowNum) ->
                               ClusterNum = (RowNum - 1) rem 3, % 0 - 2
                               RowWithMeta = add_row_indicators(ClusterNum, RowNum, Row, Cols, Rows, EccLevel),
                               RowSchemas = [translate(ClusterNum, R) || R <- RowWithMeta],
                               RowBits = encode_row(RowSchemas),
                               QuietZone = <<0:10>>,
                               FullRowBits = <<QuietZone/bits, StartBits/bits, RowBits/bits, StopBits/bits, QuietZone/bits>>,
                               {lists:duplicate(?ROW_HEIGHT, FullRowBits), RowNum + 1}
                       end, 1, RowsList),
    lists:flatten(Bitmaps).

split_rows(_RowSize, []) -> [];
split_rows(RowSize, List) ->
    {Row, Rest} = lists:split(RowSize, List),
    [Row | split_rows(RowSize, Rest)].


add_row_indicators(0 = _ClusterNum, RowNum, Row, Cols, Rows, _EccLevel) ->
    Li = 30 * ((RowNum - 1) div 3) + (Rows - 1) div 3,
    Ri = 30 * ((RowNum - 1) div 3) + (Cols - 1),
    [Li | Row] ++ [Ri];

add_row_indicators(1 = _ClusterNum, RowNum, Row, _Cols, Rows, EccLevel) ->
    Li = 30 * ((RowNum - 1) div 3) + EccLevel * 3 + (Rows - 1) rem 3,
    Ri = 30 * ((RowNum - 1) div 3) + (Rows - 1) div 3,
    [Li | Row] ++ [Ri];

add_row_indicators(2 = _ClusterNum, RowNum, Row, Cols, Rows, EccLevel) ->
    Li = 30 * ((RowNum - 1) div 3) +  (Cols - 1),
    Ri = 30 * ((RowNum - 1) div 3) + EccLevel * 3 + (Rows - 1) rem 3,
    [Li | Row] ++ [Ri].


encode_row(Schemas) ->
    lists:foldl(fun(Schema, BitsAcc) ->
                    SchemaBits = schema_to_bits(Schema),
                    <<BitsAcc/bits, SchemaBits/bits>>
                end, <<>>, Schemas).

schema_to_bits(Schema) ->
    Widths = [D - $0 ||  D <- integer_to_list(Schema)],
    {_, Code} = lists:foldl(fun(W, {BitType, CodeAcc}) ->
                                   {1 - BitType, <<CodeAcc/bits, (gen(BitType, W))/bits>>}
                            end, {1, <<>>}, Widths), % Allways begins with bar (1)
    Code.

gen(0, Width) -> <<0:Width>>;
gen(1, Width) -> <<255:Width>>.


ecc_size(Level) -> 1 bsl (Level + 1).


-spec calc_ecc(Codewords :: [0..928], Level :: 0..5) -> EccCodewords :: [0..928].
calc_ecc(Codewords, Level) ->
    EccSize = ecc_size(Level),
    EInit = list_to_tuple(lists:duplicate(EccSize, 0)),
    Pol = element(Level + 1, ?ECC_POLINOMS),
    EMid =
         lists:foldl(fun(D, EAcc) ->
                          T = (D + element(EccSize, EAcc)) rem 929,
                          EAcc3 = lists:foldl(fun(J, EAcc2) ->
                                                 Aj = element(J, Pol),
                                                 Enext = element(J - 1, EAcc2),
                                                 Ej = (Enext + (929 - (T * Aj) rem 929)) rem 929,
                                                 setelement(J, EAcc2, Ej)
                                              end, EAcc, lists:seq(EccSize, 2, -1)),
                           A0 = element(1, Pol),
                           E0 = (929 - (T * A0) rem 929) rem 929,
                           setelement(1, EAcc3, E0)
                     end, EInit, Codewords),
    R = lists:map(fun(0) -> 0;
                     (E) -> 929 - E
                  end, lists:reverse(tuple_to_list(EMid))),
%    io:format("Eres: ~w~n", [R]),
    R.


choose_ecc_level(Size) ->
    if Size =< 40 -> 2;
       Size =< 160 -> 3;
       Size =< 320 -> 4;
       Size =< 864 -> 5;
       Size >= 925 -> 0;
       Size >= 921 -> 1;
       Size >= 913 -> 2;
       Size >= 897 -> 3;
       Size >= 865 -> 4
       % Also some additional info:
       % if Size >= 865 then MaxLevel = 4
       % if Size >= 801 then MaxLevel = 5
       % if Size >= 673 then MaxLevel = 6
       % if Size >= 417 then MaxLevel = 7
    end.


% TODO: optimizaton
choose_matrix_size(MinSize) ->
    Variants = [{X + Y, X, Y, X * Y - MinSize} ||
                X <- lists:seq(1, 30), Y <- lists:seq(3, 90), X * Y >= MinSize],
    {_, Cols, Rows, Pads} = hd(lists:sort(Variants)),
    {Cols, Rows, Pads}.


-spec translate(ClasterNum :: 0..2, Value :: non_neg_integer()) -> Schema :: non_neg_integer().
translate(ClusterNum, Value) ->
    element(ClusterNum + 1, element(Value + 1, ?SCHEMA)).

